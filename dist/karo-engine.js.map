{"version":3,"file":"karo-engine.js","mappings":";;;;;;;;;;;AAAa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY,GAAG,iBAAiB,GAAG,YAAY;AAC/C,aAAa,mBAAO,CAAC,mCAAQ;AAC7B,wCAAuC,EAAE,qCAAqC,uBAAuB,EAAC;AACtG,6CAA4C,EAAE,qCAAqC,4BAA4B,EAAC;AAChH,wCAAuC,EAAE,qCAAqC,uBAAuB,EAAC;;;;;;;;;;;ACNzF;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wBAAwB,mBAAO,CAAC,gDAAe;AAC/C,aAAa,mBAAO,CAAC,wCAAQ;AAC7B,oCAAoC,mBAAO,CAAC,wDAAsB;AAClE,0BAA0B,mBAAO,CAAC,0EAA4B;AAC9D,+BAA+B,mBAAO,CAAC,8CAAiB;AACxD,wCAAwC,mBAAO,CAAC,gEAA0B;AAC1E,oCAAoC,mBAAO,CAAC,wDAAsB;AAClE,qCAAqC,mBAAO,CAAC,0DAAuB;AACpkBAAe;;;;;;;;;;;ACvNF;AACb;AACA;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,8CAA6C,EAAE,aAAa,EAAC;AAC7D,SAAS,mBAAO,CAAC,yCAAG;AACpB,UAAU,mBAAO,CAAC,+BAAI;AACtB,aAAa,mBAAO,CAAC,yCAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AC3FF;AACb;AACA;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,8CAA6C,EAAE,aAAa,EAAC;AAC7D,SAAS,mBAAO,CAAC,yCAAG;AACpB,UAAU,mBAAO,CAAC,+BAAI;AACtB,aAAa,mBAAO,CAAC,yCAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;ACxFF;AACb;AACA;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,8CAA6C,EAAE,aAAa,EAAC;AAC7D,SAAS,mBAAO,CAAC,yCAAG;AACpkBAAe;;;;;;;;;;;AChIF;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,wCAAwC,mBAAO,CAAC,mEAA6B;AAC7E,aAAa,mBAAO,CAAC,yCAAS;AAC9B,wBAAwB,mBAAO,CAAC,mDAAkB;AAClD,oCAAoC,mBAAO,CAAC,2DAAyB;AACrE,qCAAqC,mBAAO,CAAC,6DAA0B;AACvE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,+CAA+C;AAC7E,8BAA8B,+CAA+C;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AClMF;AACb;AACA;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,8CAA6C,EAAE,aAAa,EAAC;AAC7D,SAAS,mBAAO,CAAC,yCAAG;AACpB,UAAU,mBAAO,CAAC,+BAAI;AACtB,aAAa,mBAAO,CAAC,yCAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,2DAA2D,uEAAuE,IAAI,wDAAwD;AAC9L;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AC7GF;AACb;AACA;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD;AACA,6EAA6E,OAAO;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,SAAS,mBAAO,CAAC,yCAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;ACvFF;AACb;AACA;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,8CAA6C,EAAE,aAAa,EAAC;AAC7D,SAAS,mBAAO,CAAC,yCAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;ACvGF;AACb;AACA;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,8CAA6C,EAAE,aAAa,EAAC;AAC7D,SAAS,mBAAO,CAAC,yCAAG;AACpB,UAAU,mBAAO,CAAC,+BAAI;AACtB,aAAa,mBAAO,CAAC,yCAAS;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AC/FF;AACb;AACA;AACA;AACA,eAAe,gBAAgB,sCAAsC,kBAAkB;AACvF,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,CAAC;AACD,8CAA6C,EAAE,aAAa,EAAC;AAC7D,SAAS,mBAAO,CAAC,yCAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AClFF;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,GAAG,aAAa,GAAG,iBAAiB,GAAG,aAAa,GAAG,YAAY,GAAG,WAAW,GAAG,YAAY,GAAG,WAAW,GAAG,iBAAiB;AAC/I,kCAAkC,mBAAO,CAAC,uDAAa;AACvD,iBAAiB;AACjB,4BAA4B,mBAAO,CAAC,2CAAO;AAC3C,WAAW;AACX,6BAA6B,mBAAO,CAAC,6CAAQ;AAC7C,YAAY;AACZ,4BAA4B,mBAAO,CAAC,2CAAO;AAC3C,WAAW;AACX,6BAA6B,mBAAO,CAAC,6CAAQ;AAC7C,YAAY;AACZ,kCAAkC,mBAAO,CAAC,uDAAa;AACvD,iBAAiB;AACjB,8BAA8B,mBAAO,CAAC,+CAAS;AAC/C,aAAa;AACb,8BAA8B,mBAAO,CAAC,+CAAS;AAC/C,aAAa;AACb,8BAA8B,mBAAO,CAAC,+CAAS;AAC/C,aAAa;;;;;;;;;;;ACvBA;AACb;AACA;AACA,mCAAmC,oCAAoC,gBAAgB;AACvF,CAAC;AACD;AACA;AACA,CAAC;AACD;AACA,0CAA0C,4BAA4B;AACtE,CAAC;AACD;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY,GAAG,iBAAiB,GAAG,YAAY;AAC/C,6BAA6B,mBAAO,CAAC,kCAAQ;AAC7C,YAAY;AACZ,6BAA6B,mBAAO,CAAC,oDAAc;AACnD,iBAAiB;AACjB,wBAAwB,mBAAO,CAAC,wCAAQ;AACxC,YAAY;;;;;;;;;;;AC9BC;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B;AAC9B,gCAAgC;AAChC,+BAA+B;AAC/B,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AChEF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AC3LF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,WAAW,GAAG,YAAY,GAAG,aAAa,GAAG,aAAa,GAAG,eAAe,GAAG,SAAS,GAAG,UAAU;AACtH;AACA,UAAU;AACV,SAAS;AACT,eAAe;AACf,aAAa;AACb,YAAY;AACZ,WAAW;AACX,cAAc;AACd,aAAa;AACb;;;;;;;;;;;ACZa;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,YAAY,GAAG,aAAa,GAAG,WAAW,GAAG,WAAW;AACzE,SAAS,mBAAO,CAAC,mCAAG;AACpB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;;;;;;;;;;;ACzDa;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,YAAY,GAAG,WAAW,GAAG,cAAc,GAAG,aAAa,GAAG,WAAW,GAAG,cAAc,GAAG,WAAW,GAAG,YAAY,GAAG,aAAa,GAAG,aAAa,GAAG,eAAe,GAAG,SAAS,GAAG,UAAU,GAAG,aAAa,GAAG,eAAe;AACpO,8BAA8B,mBAAO,CAAC,yCAAS;AAC/C,aAAa;AACb,kBAAkB,mBAAO,CAAC,iDAAa;AACvC,sCAAqC,EAAE,qCAAqC,0BAA0B,EAAC;AACvG,qCAAoC,EAAE,qCAAqC,yBAAyB,EAAC;AACrG,2CAA0C,EAAE,qCAAqC,+BAA+B,EAAC;AACjH,yCAAwC,EAAE,qCAAqC,6BAA6B,EAAC;AAC7G,yCAAwC,EAAE,qCAAqC,6BAA6B,EAAC;AAC7G,wCAAuC,EAAE,qCAAqC,4BAA4B,EAAC;AAC3G,uCAAsC,EAAE,qCAAqC,2BAA2B,EAAC;AACzG,0CAAyC,EAAE,qCAAqC,8BAA8B,EAAC;AAC/G,kBAAkB,mBAAO,CAAC,iDAAa;AACvC,uCAAsC,EAAE,qCAAqC,2BAA2B,EAAC;AACzG,yCAAwC,EAAE,qCAAqC,6BAA6B,EAAC;AAC7G,0CAAyC,EAAE,qCAAqC,8BAA8B,EAAC;AAC/G,uCAAsC,EAAE,qCAAqC,2BAA2B,EAAC;AACzG,wCAAuC,EAAE,qCAAqC,4BAA4B,EAAC;AAC3G,gCAAgC,mBAAO,CAAC,6CAAW;AACnD,eAAe;;;;;;;;;;;ACxBF;AACb;AACA,4BAA4B,+DAA+D,iBAAiB;AAC5G;AACA,oCAAoC,MAAM,+BAA+B,YAAY;AACrF,mCAAmC,MAAM,mCAAmC,YAAY;AACxF,gCAAgC;AAChC;AACA,KAAK;AACL;AACA;AACA,cAAc,6BAA6B,0BAA0B,cAAc,qBAAqB;AACxG,iBAAiB,oDAAoD,qEAAqE,cAAc;AACxJ,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,mCAAmC,SAAS;AAC5C,mCAAmC,WAAW,UAAU;AACxD,0CAA0C,cAAc;AACxD;AACA,8GAA8G,OAAO;AACrH,iFAAiF,iBAAiB;AAClG,yDAAyD,gBAAgB,QAAQ;AACjF,+CAA+C,gBAAgB,gBAAgB;AAC/E;AACA,kCAAkC;AAClC;AACA;AACA,UAAU,YAAY,aAAa,SAAS,UAAU;AACtD,oCAAoC,SAAS;AAC7C;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA,aAAa;AACb,SAAS;AACT;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;ACzOF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,8CAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AC9BF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,yCAAyC,oCAAoC;AAC7E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,gDAAgD,2CAA2C;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AC9HF;AACb;AACA,6EAA6E,OAAO;AACpF;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB,uBAAuB;AAChD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AClDF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;ACjDF;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,4BAA4B;AAC5B,6CAA6C,mBAAO,CAAC,qFAAwB;AAC7E,4BAA4B;;;;;;;;;;;ACPf;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,aAAa,mBAAO,CAAC,8CAAc;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C,+BAA+B;AACzE;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AChHF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;ACpDF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AC3IF;AACb,8CAA6C,EAAE,aAAa,EAAC;AAC7D,UAAU,mBAAO,CAAC,6BAAO;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,CAAC;AACD,kBAAe;;;;;;;;;;;AC7DF;AACb;AACA,6CAA6C;AAC7C;AACA,8CAA6C,EAAE,aAAa,EAAC;AAC7D,cAAc,GAAG,eAAe,GAAG,eAAe;AAClD,+BAA+B,mBAAO,CAAC,4CAAU;AACjD,cAAc;AACd,gCAAgC,mBAAO,CAAC,8CAAW;AACnD,eAAe;AACf,gCAAgC,mBAAO,CAAC,8CAAW;AACnD,eAAe;;;;;;;UCXf;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;UEtBA;UACA;UACA;UACA","sources":["webpack://KaroEngine/./src/index.ts","webpack://KaroEngine/./src/libs/Game.ts","webpack://KaroEngine/./src/libs/characters/Arc.ts","webpack://KaroEngine/./src/libs/characters/Box.ts","webpack://KaroEngine/./src/libs/characters/Condition.ts","webpack://KaroEngine/./src/libs/characters/Container.ts","webpack://KaroEngine/./src/libs/characters/Image.ts","webpack://KaroEngine/./src/libs/characters/Loop.ts","webpack://KaroEngine/./src/libs/characters/Sound.ts","webpack://KaroEngine/./src/libs/characters/Text.ts","webpack://KaroEngine/./src/libs/characters/Timer.ts","webpack://KaroEngine/./src/libs/characters/index.ts","webpack://KaroEngine/./src/libs/index.ts","webpack://KaroEngine/./src/libs/math/Color.ts","webpack://KaroEngine/./src/libs/math/Vector2.ts","webpack://KaroEngine/./src/libs/math/constants.ts","webpack://KaroEngine/./src/libs/math/functions.ts","webpack://KaroEngine/./src/libs/math/index.ts","webpack://KaroEngine/./src/utils/AssetLoader.ts","webpack://KaroEngine/./src/utils/Camera.ts","webpack://KaroEngine/./src/utils/DataManager.ts","webpack://KaroEngine/./src/utils/EventEmitter.ts","webpack://KaroEngine/./src/utils/InputEventManager/KeyboardEventManager.ts","webpack://KaroEngine/./src/utils/InputEventManager/index.ts","webpack://KaroEngine/./src/utils/PropertyManager.ts","webpack://KaroEngine/./src/utils/slim/Render.ts","webpack://KaroEngine/./src/utils/slim/Storage.ts","webpack://KaroEngine/./src/utils/slim/Updater.ts","webpack://KaroEngine/./src/utils/slim/index.ts","webpack://KaroEngine/webpack/bootstrap","webpack://KaroEngine/webpack/before-startup","webpack://KaroEngine/webpack/startup","webpack://KaroEngine/webpack/after-startup"],"sourcesContent":["\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Math = exports.Character = exports.Game = void 0;\r\nvar libs_1 = require(\"./libs\");\r\nObject.defineProperty(exports, \"Game\", { enumerable: true, get: function () { return libs_1.Game; } });\r\nObject.defineProperty(exports, \"Character\", { enumerable: true, get: function () { return libs_1.Character; } });\r\nObject.defineProperty(exports, \"Math\", { enumerable: true, get: function () { return libs_1.Math; } });\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Slim = __importStar(require(\"../utils/slim\"));\r\nvar math_1 = require(\"./math\");\r\nvar AssetLoader_1 = __importDefault(require(\"../utils/AssetLoader\"));\r\nvar InputEventManager_1 = require(\"../utils/InputEventManager\");\r\nvar Camera_1 = __importDefault(require(\"../utils/Camera\"));\r\nvar PropertyManager_1 = __importDefault(require(\"../utils/PropertyManager\"));\r\nvar DataManager_1 = __importDefault(require(\"../utils/DataManager\"));\r\nvar EventEmitter_1 = __importDefault(require(\"../utils/EventEmitter\"));\r\nvar Game = /** @class */ (function () {\r\n    /**\r\n     * a javascript class to create the karo engine game object\r\n     * @param propertyOption property of game class\r\n     */\r\n    function Game(propertyOption) {\r\n        this.oldTime = 0;\r\n        this.assetsLoader = new AssetLoader_1.default();\r\n        this._devMode = \"on\";\r\n        this.Render = new Slim.Render();\r\n        this.Storage = new Slim.Storage(this);\r\n        this.camera = new Camera_1.default(this);\r\n        this.propertyManager = new PropertyManager_1.default();\r\n        this.eventEmitter = new EventEmitter_1.default(this);\r\n        /**\r\n         * public method to set an event\r\n         * @param event name of event to add\r\n         * @param callback callback function to call when the event is emiited\r\n         */\r\n        this.on = this.eventEmitter.on.bind(this.eventEmitter);\r\n        /**\r\n         * public method to call an event\r\n         * @param event name of event to emit\r\n         * @param args function arguments of the event\r\n         * @returns return `true` if the event is emitted else return `false`\r\n         */\r\n        this.emit = this.eventEmitter.emit.bind(this.eventEmitter);\r\n        /**\r\n         * public method to set a property\r\n         * @param name name name of the property to set\r\n         * @param value value to set the property with\r\n         */\r\n        this.set = this.propertyManager.set.bind(this.propertyManager);\r\n        this.store = new DataManager_1.default(this);\r\n        /**\r\n         * public method to get a property\r\n         * @param name name name of the property to get\r\n         * @returns if property exist return it value else return `null`\r\n         */\r\n        this.get = this.propertyManager.get.bind(this.propertyManager);\r\n        /**\r\n         * public method to load a list of assets\r\n         * @param assets list of assets to load\r\n         */\r\n        this.load = this.assetsLoader.load.bind(this.assetsLoader);\r\n        /**\r\n         * public method to delete a list of assets\r\n         * @param assets list of assets to delete\r\n         */\r\n        this.delete = this.assetsLoader.delete.bind(this.assetsLoader);\r\n        /**\r\n         * public method to get an assets\r\n         * @param asset name of asset to get\r\n         * @returns if asset exist return a Javascript object containing the asset data else return `null`\r\n         */\r\n        this.asset = this.assetsLoader.asset.bind(this.assetsLoader);\r\n        /**\r\n         * public method to check if an asset exist\r\n         * @param asset name of asset to check if exist\r\n         * @returns if asset exist return `true` else return `false`\r\n         */\r\n        this.check = this.assetsLoader.asset.bind(this.assetsLoader);\r\n        /**\r\n         * public method add a character to the `Storage` instance\r\n         * @param character character to add\r\n         */\r\n        this.add = this.Storage.add.bind(this.Storage);\r\n        /**\r\n         * public method to get a character\r\n         * @param path character path (e.g `character/character_child`)\r\n         * @returns return the character instance if the character exist else return `null`\r\n         */\r\n        this.child = this.Storage.child.bind(this.Storage);\r\n        /**\r\n         * public method to check if a character exist\r\n         * @param path character path (e.g `character/character_child`)\r\n         * @returns return `true` if character exist else return `false`\r\n        */\r\n        this.has = this.Storage.has.bind(this.Storage);\r\n        this.keyboardEvent = new InputEventManager_1.KeyboardEventManager(this);\r\n        /**\r\n         * public method to register a key combination from the keyboard\r\n         * @param keyCombination the key combination to register\r\n         */\r\n        this.register = this.keyboardEvent.register.bind(this.keyboardEvent);\r\n        /**\r\n         * public method to remove a registered key combination\r\n         * @param keyCombination the key combination to remove\r\n         */\r\n        this.unregister = this.keyboardEvent.unregister.bind(this.keyboardEvent);\r\n        this.propertyManager.scheme({\r\n            \"background color\": propertyOption[\"background color\"] != undefined ? propertyOption[\"background color\"] : new math_1.Color(255, 255, 255, 1),\r\n            name: propertyOption.name != undefined ? propertyOption.name : \"New Game\",\r\n            author: propertyOption.author != undefined ? propertyOption.author : \"Quality Builder\",\r\n            description: propertyOption.description != undefined ? propertyOption.description : String(),\r\n            version: propertyOption.version != undefined ? propertyOption.version : \"1.0.0\",\r\n            icon: propertyOption.icon != undefined ? propertyOption.icon : String()\r\n        });\r\n        this.canvas = propertyOption.canvas;\r\n        this.graphic = this.canvas.getContext(\"2d\");\r\n        this.Updater = new Slim.Updater(this.canvas, this, this, this.Storage, this.Render);\r\n    }\r\n    Object.defineProperty(Game.prototype, \"tree\", {\r\n        /**\r\n         * public getter to character tree structure\r\n         */\r\n        get: function () {\r\n            return this.Storage.characterTree;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Game.prototype, \"developmentMode\", {\r\n        get: function () {\r\n            return this._devMode;\r\n        },\r\n        /**\r\n         * public property to activate the engine development mode\r\n         */\r\n        set: function (mode) {\r\n            this._devMode = mode;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Game.prototype, \"type\", {\r\n        /**\r\n         * public getter to get the type of the character\r\n         */\r\n        get: function () {\r\n            return \"Game\";\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * public method to draw the game\r\n     * @param time number of second since the browser was last rendered\r\n     */\r\n    Game.prototype.draw = function (time) {\r\n        var _this = this;\r\n        var dt = (time - this.oldTime) / 1000;\r\n        this.oldTime = time;\r\n        this.canvas.style.backgroundColor = this.get(\"background color\").toString();\r\n        this.assetsLoader.isAssetsLoaded()\r\n            .then(function () {\r\n            _this.graphic.clearRect(0, 0, _this.canvas.width, _this.canvas.height);\r\n            if (_this._devMode == \"on\") {\r\n                _this.Updater.update(dt);\r\n                _this.Render.render(_this.graphic, new math_1.Vector2(0, 0), new math_1.Vector2(1, 1), 0);\r\n            }\r\n            else {\r\n                _this.Updater.update(dt);\r\n                _this.Render.render(_this.graphic, new math_1.Vector2(0, 0), new math_1.Vector2(1, 1), 0);\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * public method to called when the user interaction with the keyboard\r\n     * @param ev Javascript object that describe the user interaction with the keyboard\r\n     */\r\n    Game.prototype.onKeyPress = function (ev) {\r\n        if (this._devMode == \"off\")\r\n            this.keyboardEvent.onKeyPress(ev);\r\n    };\r\n    Object.defineProperty(Game.prototype, \"offset\", {\r\n        /**\r\n        * public getter to get the camera offset\r\n        */\r\n        get: function () {\r\n            return this.camera.offset;\r\n        },\r\n        /**\r\n         * public setter to set the camera offset\r\n         */\r\n        set: function (value) {\r\n            this.camera.offset = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Game;\r\n}());\r\nexports.default = Game;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _1 = require(\".\");\r\nvar __1 = require(\"..\");\r\nvar math_1 = require(\"../math\");\r\nvar Arc = /** @class */ (function (_super) {\r\n    __extends(Arc, _super);\r\n    /**\r\n     * a character use to draw arcs and circles\r\n     * @param propertyOption property of the arc character\r\n     */\r\n    function Arc(propertyOption) {\r\n        var _this = _super.call(this, {\r\n            name: propertyOption.name,\r\n            position: propertyOption.position,\r\n            scale: propertyOption.scale,\r\n            rotation: propertyOption.rotation,\r\n            \"z index\": propertyOption[\"z index\"],\r\n            opacity: propertyOption.opacity,\r\n            visible: propertyOption.visible\r\n        }) || this;\r\n        _this._type = \"Arc\";\r\n        _this.propertyManager.scheme({\r\n            fill: propertyOption.fill != undefined ? propertyOption.fill : true,\r\n            \"shadow offset\": propertyOption[\"shadow offset\"] != undefined ? propertyOption[\"shadow offset\"] : new math_1.Vector2(0, 0),\r\n            \"shadow blur\": propertyOption[\"shadow blur\"] != undefined ? propertyOption[\"shadow blur\"] : 0,\r\n            \"line width\": propertyOption[\"line width\"] != undefined ? propertyOption[\"line width\"] : 1,\r\n            anticlockwise: propertyOption.anticlockwise != undefined ? propertyOption.anticlockwise : false,\r\n            color: propertyOption.color != undefined ? propertyOption.color : new math_1.Color(0, 0, 0, 1),\r\n            radius: propertyOption.radius != undefined ? propertyOption.radius : 10,\r\n            \"shadow color\": propertyOption[\"shadow color\"] != undefined ? propertyOption[\"shadow color\"] : new math_1.Color(0, 0, 0, 0),\r\n            \"start angle\": propertyOption[\"start angle\"] != undefined ? propertyOption[\"start angle\"] : 0,\r\n            \"end angle\": propertyOption[\"end angle\"] != undefined ? propertyOption[\"end angle\"] : 360,\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * public method to render the character\r\n     * @param graphic instance of `CanvasRenderingContext2D` use to draw the character\r\n     * @param displayPosition actual position of the character on the canvas\r\n     * @param displayScale actual scale of the character\r\n     * @param displayRotation actual rotation of the character\r\n     */\r\n    Arc.prototype.render = function (graphics, displayPosition, displayScale, displayRotation) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\") && this.get(\"visible\")) {\r\n            this.displayPosition = displayPosition.add(this.get(\"position\"));\r\n            this.displayScale = displayScale.multiply(this.get(\"scale\"));\r\n            this.displayRotation = displayRotation + this.get(\"rotation\");\r\n            graphics.save();\r\n            graphics.translate(this.displayPosition.x, this.displayPosition.y);\r\n            graphics.rotate(this.displayRotation * Math.PI / 180);\r\n            graphics.scale(this.displayScale.x, this.displayScale.y);\r\n            graphics.translate(-this.displayPosition.x, -this.displayPosition.y);\r\n            graphics.globalAlpha = (this.parent instanceof __1.Game ? this.get(\"opacity\") : this.parent.get(\"opacity\") * this.get(\"opacity\"));\r\n            graphics.shadowBlur = this.get(\"shadow blur\");\r\n            graphics.shadowColor = this.get(\"color\").toString();\r\n            graphics.shadowOffsetX = this.get(\"shadow offset\").x;\r\n            graphics.shadowOffsetY = this.get(\"shadow offset\").y;\r\n            graphics.beginPath();\r\n            if (this.get(\"fill\") == true) {\r\n                graphics.fillStyle = this.get(\"color\").toString();\r\n                graphics.arc(this.displayPosition.x - this.game.offset.x, this.displayPosition.y - this.game.offset.y, this.get(\"radius\"), this.get(\"start angle\"), this.get(\"end angle\"), this.get(\"anticlockwise\"));\r\n                graphics.fill();\r\n            }\r\n            else if (this.get(\"fill\") == false) {\r\n                graphics.lineWidth = this.get(\"line width\");\r\n                graphics.strokeStyle = this.get(\"color\").toString();\r\n                graphics.arc(this.displayPosition.x - this.game.offset.x, this.displayPosition.y - this.game.offset.y, this.get(\"radius\"), this.get(\"start angle\"), this.get(\"end angle\"), this.get(\"anticlockwise\"));\r\n                graphics.stroke();\r\n            }\r\n            graphics.restore();\r\n            this.Render.render(graphics, this.displayPosition, this.displayScale, this.displayRotation);\r\n        }\r\n    };\r\n    return Arc;\r\n}(_1.Container));\r\nexports.default = Arc;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _1 = require(\".\");\r\nvar __1 = require(\"..\");\r\nvar math_1 = require(\"../math\");\r\nvar Box = /** @class */ (function (_super) {\r\n    __extends(Box, _super);\r\n    /**\r\n     * a character use to draw a box\r\n     * @param propertyOption property of the box character\r\n     */\r\n    function Box(propertyOption) {\r\n        var _this = _super.call(this, {\r\n            name: propertyOption.name,\r\n            position: propertyOption.position,\r\n            scale: propertyOption.scale,\r\n            rotation: propertyOption.rotation,\r\n            \"z index\": propertyOption[\"z index\"],\r\n            opacity: propertyOption.opacity,\r\n            visible: propertyOption.visible\r\n        }) || this;\r\n        _this._type = \"Box\";\r\n        _this.propertyManager.scheme({\r\n            height: propertyOption.height != undefined ? propertyOption.height : 40,\r\n            width: propertyOption.width != undefined ? propertyOption.width : 40,\r\n            fill: propertyOption.fill != undefined ? propertyOption.fill : true,\r\n            \"shadow offset\": propertyOption[\"shadow offset\"] != undefined ? propertyOption[\"shadow offset\"] : new math_1.Vector2(0, 0),\r\n            \"shadow blur\": propertyOption[\"shadow blur\"] != undefined ? propertyOption[\"shadow blur\"] : 0,\r\n            \"line width\": propertyOption[\"line width\"] != undefined ? propertyOption[\"line width\"] : 1,\r\n            color: propertyOption.color != undefined ? propertyOption.color : new math_1.Color(0, 0, 0, 1),\r\n            \"shadow color\": propertyOption[\"shadow color\"] != undefined ? propertyOption[\"shadow color\"] : new math_1.Color(0, 0, 0, 0)\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * public method to render the character\r\n     * @param graphic instance of `CanvasRenderingContext2D` use to draw the character\r\n     * @param displayPosition actual position of the character on the canvas\r\n     * @param displayScale actual scale of the character\r\n     * @param displayRotation actual rotation of the character\r\n     */\r\n    Box.prototype.render = function (graphics, displayPosition, displayScale, displayRotation) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\") && this.get(\"visible\")) {\r\n            this.displayPosition = displayPosition.add(this.get(\"position\"));\r\n            this.displayScale = displayScale.multiply(this.get(\"scale\"));\r\n            this.displayRotation = displayRotation + this.get(\"rotation\");\r\n            graphics.save();\r\n            graphics.translate(this.displayPosition.x, this.displayPosition.y);\r\n            graphics.rotate(this.displayRotation * Math.PI / 180);\r\n            graphics.scale(this.displayScale.x, this.displayScale.y);\r\n            graphics.translate(-this.displayPosition.x, -this.displayPosition.y);\r\n            graphics.globalAlpha = (this.parent instanceof __1.Game ? this.get(\"opacity\") : this.parent.get(\"opacity\") * this.get(\"opacity\"));\r\n            graphics.shadowBlur = this.get(\"shadow blur\");\r\n            graphics.shadowColor = this.get(\"color\").toString();\r\n            graphics.shadowOffsetX = this.get(\"shadow offset\").x;\r\n            graphics.shadowOffsetY = this.get(\"shadow offset\").y;\r\n            graphics.lineWidth = this.get(\"line width\");\r\n            graphics.beginPath();\r\n            if (this.get(\"fill\") == true)\r\n                graphics.fillStyle = this.get(\"color\").toString();\r\n            else if (this.get(\"fill\") == false)\r\n                graphics.strokeStyle = this.get(\"color\").toString();\r\n            graphics.rect(((this.displayPosition.x) - this.get(\"width\") / 2) - this.game.offset.x, ((this.displayPosition.y) - this.get(\"height\") / 2) - this.game.offset.y, this.get(\"width\"), this.get(\"height\"));\r\n            if (this.get(\"fill\") == true)\r\n                graphics.fill();\r\n            else if (this.get(\"fill\") == false)\r\n                graphics.stroke();\r\n            graphics.restore();\r\n            this.Render.render(graphics, this.displayPosition, this.displayScale, this.displayRotation);\r\n        }\r\n    };\r\n    return Box;\r\n}(_1.Container));\r\nexports.default = Box;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _1 = require(\".\");\r\nvar Condition = /** @class */ (function (_super) {\r\n    __extends(Condition, _super);\r\n    function Condition(propertyOption) {\r\n        var _this = _super.call(this, {\r\n            name: propertyOption.name,\r\n            \"z index\": propertyOption[\"z index\"],\r\n            opacity: propertyOption.opacity,\r\n            visible: propertyOption.visible\r\n        }) || this;\r\n        _this._type = \"Condition\";\r\n        _this.propertyManager.scheme({\r\n            play: propertyOption.play != undefined ? propertyOption.play : false,\r\n            condition: propertyOption.condition != undefined ? propertyOption.condition : \"equal to\",\r\n            \"left side\": propertyOption[\"left side\"] != undefined ? propertyOption[\"left side\"] : 0,\r\n            \"right side\": propertyOption[\"right side\"] != undefined ? propertyOption[\"right side\"] : 0\r\n        });\r\n        _this.propertyManager.delete(\"position\");\r\n        _this.propertyManager.delete(\"rotation\");\r\n        _this.propertyManager.delete(\"scale\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * public method to update the character\r\n     * @param dt time difference between the previous frame and the current time\r\n     */\r\n    Condition.prototype.update = function (dt) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\")) {\r\n            var condition = this.get(\"condition\");\r\n            var rightSide = this.get(\"right side\");\r\n            var leftSide = this.get(\"left side\");\r\n            if (this.get(\"play\") == true) {\r\n                if (condition == \"equal to\") {\r\n                    if (leftSide == rightSide) {\r\n                        this.eventEmitter.emit(\"is true\");\r\n                    }\r\n                    else {\r\n                        this.eventEmitter.emit(\"is false\");\r\n                    }\r\n                }\r\n                else if (condition == \"greater than\") {\r\n                    if (typeof leftSide == \"number\" && typeof rightSide == \"number\") {\r\n                        if (leftSide > rightSide) {\r\n                            this.eventEmitter.emit(\"is true\");\r\n                        }\r\n                        else {\r\n                            this.eventEmitter.emit(\"is false\");\r\n                        }\r\n                    }\r\n                }\r\n                else if (condition == \"greater than or equal to\") {\r\n                    if (typeof leftSide == \"number\" && typeof rightSide == \"number\") {\r\n                        if (leftSide >= rightSide) {\r\n                            this.eventEmitter.emit(\"is true\");\r\n                        }\r\n                        else {\r\n                            this.eventEmitter.emit(\"is false\");\r\n                        }\r\n                    }\r\n                }\r\n                else if (condition == \"less than\") {\r\n                    if (typeof leftSide == \"number\" && typeof rightSide == \"number\") {\r\n                        if (leftSide < rightSide) {\r\n                            this.eventEmitter.emit(\"is true\");\r\n                        }\r\n                        else {\r\n                            this.eventEmitter.emit(\"is false\");\r\n                        }\r\n                    }\r\n                }\r\n                else if (condition == \"less than or equal to\") {\r\n                    if (typeof leftSide == \"number\" && typeof rightSide == \"number\") {\r\n                        if (leftSide <= rightSide) {\r\n                            this.eventEmitter.emit(\"is true\");\r\n                        }\r\n                        else {\r\n                            this.eventEmitter.emit(\"is false\");\r\n                        }\r\n                    }\r\n                }\r\n                else if (condition == \"not\") {\r\n                    if (leftSide != rightSide) {\r\n                        this.eventEmitter.emit(\"is true\");\r\n                    }\r\n                    else {\r\n                        this.eventEmitter.emit(\"is false\");\r\n                    }\r\n                }\r\n                this.set(\"play\", false);\r\n            }\r\n            this.eventEmitter.emit(\"update\", dt);\r\n            this.Updater.update(dt);\r\n        }\r\n    };\r\n    /**\r\n     * public method to render the character\r\n     * @param graphic instance of `CanvasRenderingContext2D` use to draw the character\r\n     * @param displayPosition actual position of the character on the canvas\r\n     * @param displayScale actual scale of the character\r\n     * @param displayRotation actual rotation of the character\r\n     */\r\n    Condition.prototype.render = function (graphics, displayPosition, displayScale, displayRotation) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\") && this.get(\"visible\")) {\r\n            this.displayPosition = displayPosition;\r\n            this.displayScale = displayScale;\r\n            this.displayRotation = displayRotation;\r\n            this.Render.render(graphics, this.displayPosition, this.displayScale, this.displayRotation);\r\n        }\r\n    };\r\n    return Condition;\r\n}(_1.Container));\r\nexports.default = Condition;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar PropertyManager_1 = __importDefault(require(\"../../utils/PropertyManager\"));\r\nvar math_1 = require(\"../math\");\r\nvar Slim = __importStar(require(\"../../utils/slim\"));\r\nvar DataManager_1 = __importDefault(require(\"../../utils/DataManager\"));\r\nvar EventEmitter_1 = __importDefault(require(\"../../utils/EventEmitter\"));\r\nvar Container = /** @class */ (function () {\r\n    /**\r\n     * a character with no special meaning at all but used to group other characters\r\n     * @param propertyOption property of container character\r\n     */\r\n    function Container(propertyOption) {\r\n        this.Render = new Slim.Render();\r\n        this.Storage = new Slim.Storage(this);\r\n        this.displaySize = {\r\n            x: 40,\r\n            y: 50\r\n        };\r\n        this.propertyManager = new PropertyManager_1.default();\r\n        /**\r\n         * public method to set a property\r\n         * @param name name name of the property to set\r\n         * @param value value to set the property with\r\n         */\r\n        this.set = this.propertyManager.set.bind(this.propertyManager);\r\n        /**\r\n         * public method to get a property\r\n         * @param name name name of the property to get\r\n         * @returns if property exist return it value else return `null`\r\n         */\r\n        this.get = this.propertyManager.get.bind(this.propertyManager);\r\n        /**\r\n         * public method add a character to the `Storage` instance\r\n         * @param character character to add\r\n         */\r\n        this.add = this.Storage.add.bind(this.Storage);\r\n        /**\r\n         * public method to get all the character propertries\r\n         * @returns return a `Map` with the property name as the map key and the property value as the map value\r\n         */\r\n        this.entry = this.propertyManager.entry.bind(this.propertyManager);\r\n        /**\r\n         * public method to get a character\r\n         * @param path character path (e.g `character/character_child`)\r\n         * @returns return the character instance if the character exist else return `null`\r\n         */\r\n        this.child = this.Storage.child.bind(this.Storage);\r\n        this.eventEmitter = new EventEmitter_1.default(this);\r\n        /**\r\n         * public method to set an event\r\n         * @param event name of event to add\r\n         * @param callback callback function to call when the event is emiited\r\n         */\r\n        this.on = this.eventEmitter.on.bind(this.eventEmitter);\r\n        /**\r\n         * public method to call an event\r\n         * @param event name of event to emit\r\n         * @param args function arguments of the event\r\n         * @returns return `true` if the event is emitted else return `false`\r\n         */\r\n        this.emit = this.eventEmitter.emit.bind(this.eventEmitter);\r\n        this.store = new DataManager_1.default(this);\r\n        /**\r\n         * public method to check if a character exist\r\n         * @param path character path (e.g `character/character_child`)\r\n         * @returns return `true` if character exist else return `false`\r\n         */\r\n        this.has = this.Storage.has.bind(this.Storage);\r\n        this._type = \"Container\";\r\n        this.propertyManager.scheme({\r\n            name: propertyOption.name,\r\n            \"is destroyed\": { value: false, readonly: true, type: \"boolean\" },\r\n            \"is initalize\": { value: false, readonly: true, type: \"boolean\" },\r\n            path: String(),\r\n            opacity: propertyOption.opacity != undefined ? propertyOption.opacity : 1,\r\n            position: propertyOption.position != undefined ? propertyOption.position : new math_1.Vector2(0, 0),\r\n            scale: propertyOption.scale != undefined ? propertyOption.scale : new math_1.Vector2(1, 1),\r\n            rotation: propertyOption.rotation != undefined ? propertyOption.rotation : 0,\r\n            visible: propertyOption.visible != undefined ? propertyOption.visible : true,\r\n            \"z index\": propertyOption[\"z index\"] != undefined ? propertyOption[\"z index\"] : 1\r\n        });\r\n    }\r\n    Object.defineProperty(Container.prototype, \"tree\", {\r\n        /**\r\n         * public getter to character tree structure\r\n         */\r\n        get: function () {\r\n            return this.Storage.characterTree;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"type\", {\r\n        /**\r\n         * public getter to get the type of the character\r\n         */\r\n        get: function () {\r\n            return this._type;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"parent\", {\r\n        /**\r\n         * public getter to get the parent of the character\r\n         */\r\n        get: function () {\r\n            return this._parent;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Container.prototype, \"game\", {\r\n        /**\r\n         * public getter to get the game instance\r\n         */\r\n        get: function () {\r\n            return this._game;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * public method to initalize the character\r\n     * @param canvas instance of the `HTMLCanvasElement`\r\n     * @param game insatance of the `Game`\r\n     * @param parent parnet character instance of the character\r\n     */\r\n    Container.prototype.initalize = function (canvas, game, parent) {\r\n        if (!this.get(\"is initalize\")) {\r\n            this._parent = parent;\r\n            this._game = game;\r\n            this.canvas = canvas;\r\n            this.propertyManager.override(\"is initalize\", true);\r\n            this.Updater = new Slim.Updater(this.canvas, this._game, this, this.Storage, this.Render);\r\n            this.eventEmitter.emit(\"init\");\r\n        }\r\n    };\r\n    /**\r\n     * public method to destroy the character\r\n     */\r\n    Container.prototype.destroy = function () {\r\n        this.propertyManager.override(\"is destroyed\", true);\r\n    };\r\n    /**\r\n     * public method to update the character\r\n     * @param dt time difference between the previous frame and the current time\r\n     */\r\n    Container.prototype.update = function (dt) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\")) {\r\n            this.eventEmitter.emit(\"update\", dt);\r\n            this.Updater.update(dt);\r\n        }\r\n    };\r\n    /**\r\n     * public method to render the character\r\n     * @param graphic instance of `CanvasRenderingContext2D` use to draw the character\r\n     * @param displayPosition actual position of the character on the canvas\r\n     * @param displayScale actual scale of the character\r\n     * @param displayRotation actual rotation of the character\r\n     */\r\n    Container.prototype.render = function (graphics, displayPosition, displayScale, displayRotation) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\") && this.get(\"visible\")) {\r\n            this.displayPosition = displayPosition.add(this.get(\"position\"));\r\n            this.displayScale = displayScale.multiply(this.get(\"scale\"));\r\n            this.displayRotation = displayRotation + this.get(\"rotation\");\r\n            this.Render.render(graphics, this.displayPosition, this.displayScale, this.displayRotation);\r\n        }\r\n    };\r\n    return Container;\r\n}());\r\nexports.default = Container;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _1 = require(\".\");\r\nvar __1 = require(\"..\");\r\nvar math_1 = require(\"../math\");\r\nvar Image = /** @class */ (function (_super) {\r\n    __extends(Image, _super);\r\n    /**\r\n     * a character use to draw an image or group of images\r\n     * @param propertyOption property of the image character\r\n     */\r\n    function Image(propertyOption) {\r\n        var _this = _super.call(this, {\r\n            name: propertyOption.name,\r\n            position: propertyOption.position,\r\n            scale: propertyOption.scale,\r\n            rotation: propertyOption.rotation,\r\n            \"z index\": propertyOption[\"z index\"],\r\n            opacity: propertyOption.opacity,\r\n            visible: propertyOption.visible\r\n        }) || this;\r\n        _this.currentTime = 0;\r\n        _this.currentIndex = 0;\r\n        _this._type = \"Image\";\r\n        _this.propertyManager.scheme({\r\n            source: propertyOption.source != undefined ? { type: \"Array<string>\", readonly: false, value: propertyOption.source } : { type: \"Array<string>\", readonly: false, value: Array() },\r\n            rate: propertyOption.rate != undefined ? propertyOption.rate : 1,\r\n            height: propertyOption.height != undefined ? propertyOption.height : 40,\r\n            width: propertyOption.width != undefined ? propertyOption.width : 40,\r\n            \"shadow offset\": propertyOption[\"shadow offset\"] != undefined ? propertyOption[\"shadow offset\"] : new math_1.Vector2(0, 0),\r\n            \"shadow blur\": propertyOption[\"shadow blur\"] != undefined ? propertyOption[\"shadow blur\"] : 0,\r\n            \"line width\": propertyOption[\"line width\"] != undefined ? propertyOption[\"line width\"] : 1,\r\n            \"shadow color\": propertyOption[\"shadow color\"] != undefined ? propertyOption[\"shadow color\"] : new math_1.Color(0, 0, 0, 0),\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * public method to update the character\r\n     * @param dt time difference between the previous frame and the current time\r\n     */\r\n    Image.prototype.update = function (dt) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\")) {\r\n            if (this.get(\"source\").length == 1) {\r\n                this.currentIndex = 0;\r\n            }\r\n            else if (this.get(\"source\").length > 1) {\r\n                this.currentTime += dt;\r\n                var rate = this.get(\"rate\");\r\n                if (this.currentTime >= rate) {\r\n                    this.currentIndex += 1;\r\n                    this.currentTime = 0;\r\n                    this.currentIndex = this.currentIndex > (this.get(\"source\").length - 1) ? 0 : this.currentIndex;\r\n                }\r\n            }\r\n            this.Updater.update(dt);\r\n        }\r\n    };\r\n    /**\r\n     * public method to render the character\r\n     * @param graphic instance of `CanvasRenderingContext2D` use to draw the character\r\n     * @param displayPosition actual position of the character on the canvas\r\n     * @param displayScale actual scale of the character\r\n     * @param displayRotation actual rotation of the character\r\n     */\r\n    Image.prototype.render = function (graphics, displayPosition, displayScale, displayRotation) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\") && this.get(\"visible\")) {\r\n            this.displayPosition = displayPosition.add(this.get(\"position\"));\r\n            this.displayScale = displayScale.multiply(this.get(\"scale\"));\r\n            this.displayRotation = displayRotation + this.get(\"rotation\");\r\n            graphics.save();\r\n            graphics.translate(this.displayPosition.x, this.displayPosition.y);\r\n            graphics.rotate(this.displayRotation * Math.PI / 180);\r\n            graphics.scale(this.displayScale.x, this.displayScale.y);\r\n            graphics.translate(-this.displayPosition.x, -this.displayPosition.y);\r\n            graphics.globalAlpha = (this.parent instanceof __1.Game ? this.get(\"opacity\") : this.parent.get(\"opacity\") * this.get(\"opacity\"));\r\n            graphics.shadowBlur = this.get(\"shadow blur\");\r\n            graphics.shadowColor = this.get(\"color\").toString();\r\n            graphics.shadowOffsetX = this.get(\"shadow offset\").x;\r\n            graphics.shadowOffsetY = this.get(\"shadow offset\").y;\r\n            var imageAssetsName = this.get(\"source\")[this.currentIndex];\r\n            if (imageAssetsName != undefined) {\r\n                var imageAsset = this.game.asset(imageAssetsName);\r\n                if (imageAsset != null) {\r\n                    if (imageAsset.type == \"image\") {\r\n                        graphics.drawImage(imageAsset.data, ((this.displayPosition.x) - this.get(\"width\") / 2) - this.game.offset.x, ((this.displayPosition.y) - this.get(\"height\") / 2) - this.game.offset.y, this.get(\"width\"), this.get(\"height\"));\r\n                    }\r\n                }\r\n            }\r\n            graphics.restore();\r\n            this.Render.render(graphics, this.displayPosition, this.displayScale, this.displayRotation);\r\n        }\r\n    };\r\n    return Image;\r\n}(_1.Container));\r\nexports.default = Image;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _1 = require(\".\");\r\nvar Loop = /** @class */ (function (_super) {\r\n    __extends(Loop, _super);\r\n    /**\r\n     * a character use to repeat a particular task\r\n     * @param propertyOption property of the loop character\r\n     */\r\n    function Loop(propertyOption) {\r\n        var _this = _super.call(this, {\r\n            name: propertyOption.name,\r\n            \"z index\": propertyOption[\"z index\"],\r\n            opacity: propertyOption.opacity,\r\n            visible: propertyOption.visible\r\n        }) || this;\r\n        _this._type = \"Loop\";\r\n        _this.propertyManager.scheme({\r\n            time: propertyOption.time != undefined ? propertyOption.time : 0,\r\n            play: propertyOption.play != undefined ? propertyOption.play : false\r\n        });\r\n        _this.propertyManager.delete(\"position\");\r\n        _this.propertyManager.delete(\"rotation\");\r\n        _this.propertyManager.delete(\"scale\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * public method to update the character\r\n     * @param dt time difference between the previous frame and the current time\r\n     */\r\n    Loop.prototype.update = function (dt) {\r\n        var _this = this;\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\")) {\r\n            if (this.get(\"play\") == true) {\r\n                __spreadArray([], Array.from(Array(this.get(\"time\")).keys()), true).forEach(function (i) {\r\n                    i = i + 1;\r\n                    _this.eventEmitter.emit(\"each\", i);\r\n                    if (i == _this.get(\"time\"))\r\n                        _this.eventEmitter.emit(\"end\", i);\r\n                });\r\n                this.set(\"play\", false);\r\n            }\r\n            this.eventEmitter.emit(\"update\", dt);\r\n            this.Updater.update(dt);\r\n        }\r\n    };\r\n    /**\r\n     * public method to render the character\r\n     * @param graphic instance of `CanvasRenderingContext2D` use to draw the character\r\n     * @param displayPosition actual position of the character on the canvas\r\n     * @param displayScale actual scale of the character\r\n     * @param displayRotation actual rotation of the character\r\n     */\r\n    Loop.prototype.render = function (graphics, displayPosition, displayScale, displayRotation) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\") && this.get(\"visible\")) {\r\n            this.displayPosition = displayPosition;\r\n            this.displayScale = displayScale;\r\n            this.displayRotation = displayRotation;\r\n            this.Render.render(graphics, this.displayPosition, this.displayScale, this.displayRotation);\r\n        }\r\n    };\r\n    return Loop;\r\n}(_1.Container));\r\nexports.default = Loop;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _1 = require(\".\");\r\nvar Sound = /** @class */ (function (_super) {\r\n    __extends(Sound, _super);\r\n    /**\r\n     * a character use to play sounds\r\n     * @param propertyOption property of the sound character\r\n     */\r\n    function Sound(propertyOption) {\r\n        var _this = _super.call(this, {\r\n            name: propertyOption.name,\r\n            \"z index\": propertyOption[\"z index\"],\r\n            opacity: propertyOption.opacity,\r\n            visible: propertyOption.visible\r\n        }) || this;\r\n        _this.audio = null;\r\n        _this._type = \"Sound\";\r\n        _this.propertyManager.scheme({\r\n            source: propertyOption.source != undefined ? propertyOption.source : String(),\r\n            repeat: propertyOption.repeat != undefined ? propertyOption.repeat : false,\r\n            rate: propertyOption.rate != undefined ? propertyOption.rate : 1,\r\n            volume: propertyOption.volume != undefined ? propertyOption.volume : 100,\r\n            play: propertyOption.play != undefined ? propertyOption.play : false\r\n        });\r\n        _this.propertyManager.delete(\"position\");\r\n        _this.propertyManager.delete(\"rotation\");\r\n        _this.propertyManager.delete(\"scale\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * public method to update the character\r\n     * @param dt time difference between the previous frame and the current time\r\n     */\r\n    Sound.prototype.update = function (dt) {\r\n        var _this = this;\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\")) {\r\n            if (this.audio == null) {\r\n                var audioSource = this.get(\"source\");\r\n                var audioAsset = this.game.asset(audioSource);\r\n                if (audioAsset != null) {\r\n                    if (audioAsset.type == \"audio\") {\r\n                        this.audio = audioAsset.data.cloneNode(true);\r\n                    }\r\n                }\r\n            }\r\n            else {\r\n                this.audio.volume = this.get(\"volume\") / 100;\r\n                this.audio.loop = this.get(\"repeat\");\r\n                this.audio.playbackRate = this.get(\"rate\");\r\n                this.audio.onended = function () {\r\n                    var _a;\r\n                    if (!_this.get(\"repeat\")) {\r\n                        _this.set(\"play\", false);\r\n                        (_a = _this.audio) === null || _a === void 0 ? void 0 : _a.pause();\r\n                    }\r\n                };\r\n            }\r\n            if (this.audio != null) {\r\n                if (this.get(\"play\") == true) {\r\n                    if (this.audio.paused)\r\n                        this.audio.play();\r\n                }\r\n                else if (this.get(\"play\") == false) {\r\n                    this.audio.pause();\r\n                }\r\n            }\r\n            this.eventEmitter.emit(\"update\", dt);\r\n            this.Updater.update(dt);\r\n        }\r\n    };\r\n    /**\r\n     * public method to render the character\r\n     * @param graphic instance of `CanvasRenderingContext2D` use to draw the character\r\n     * @param displayPosition actual position of the character on the canvas\r\n     * @param displayScale actual scale of the character\r\n     * @param displayRotation actual rotation of the character\r\n     */\r\n    Sound.prototype.render = function (graphics, displayPosition, displayScale, displayRotation) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\") && this.get(\"visible\")) {\r\n            this.displayPosition = displayPosition;\r\n            this.displayScale = displayScale;\r\n            this.displayRotation = displayRotation;\r\n            this.Render.render(graphics, this.displayPosition, this.displayScale, this.displayRotation);\r\n        }\r\n    };\r\n    return Sound;\r\n}(_1.Container));\r\nexports.default = Sound;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _1 = require(\".\");\r\nvar __1 = require(\"..\");\r\nvar math_1 = require(\"../math\");\r\nvar Text = /** @class */ (function (_super) {\r\n    __extends(Text, _super);\r\n    /**\r\n     * a character use to draw texts\r\n     * @param propertyOption property of the text character\r\n     */\r\n    function Text(propertyOption) {\r\n        var _this = _super.call(this, {\r\n            name: propertyOption.name,\r\n            position: propertyOption.position,\r\n            scale: propertyOption.scale,\r\n            rotation: propertyOption.rotation,\r\n            \"z index\": propertyOption[\"z index\"],\r\n            opacity: propertyOption.opacity,\r\n            visible: propertyOption.visible\r\n        }) || this;\r\n        _this._type = \"Text\";\r\n        _this.propertyManager.scheme({\r\n            fill: propertyOption.fill != undefined ? propertyOption.fill : true,\r\n            \"shadow offset\": propertyOption[\"shadow offset\"] != undefined ? propertyOption[\"shadow offset\"] : new math_1.Vector2(0, 0),\r\n            \"shadow blur\": propertyOption[\"shadow blur\"] != undefined ? propertyOption[\"shadow blur\"] : 0,\r\n            \"line width\": propertyOption[\"line width\"] != undefined ? propertyOption[\"line width\"] : 1,\r\n            color: propertyOption.color != undefined ? propertyOption.color : new math_1.Color(0, 0, 0, 1),\r\n            \"shadow color\": propertyOption[\"shadow color\"] != undefined ? propertyOption[\"shadow color\"] : new math_1.Color(0, 0, 0, 0),\r\n            \"font size\": propertyOption[\"font size\"] != undefined ? propertyOption[\"font size\"] : 16,\r\n            \"font style\": propertyOption[\"font style\"] != undefined ? propertyOption[\"font style\"] : \"normal\",\r\n            \"font variant\": propertyOption[\"font variant\"] != undefined ? propertyOption[\"font variant\"] : \"normal\",\r\n            \"font weight\": propertyOption[\"font weight\"] != undefined ? propertyOption[\"font weight\"] : \"normal\",\r\n            \"font family\": propertyOption[\"font family\"] != undefined ? propertyOption[\"font family\"] : \"sans-serif\",\r\n            \"text align\": propertyOption[\"text align\"] != undefined ? propertyOption[\"text align\"] : \"center\",\r\n            \"text baseline\": propertyOption[\"text baseline\"] != undefined ? propertyOption[\"text baseline\"] : \"middle\",\r\n            text: propertyOption.text != undefined ? propertyOption.text : \"Hello, world!\",\r\n        });\r\n        return _this;\r\n    }\r\n    /**\r\n     * public method to render the character\r\n     * @param graphic instance of `CanvasRenderingContext2D` use to draw the character\r\n     * @param displayPosition actual position of the character on the canvas\r\n     * @param displayScale actual scale of the character\r\n     * @param displayRotation actual rotation of the character\r\n     */\r\n    Text.prototype.render = function (graphics, displayPosition, displayScale, displayRotation) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\") && this.get(\"visible\")) {\r\n            this.displayPosition = displayPosition.add(this.get(\"position\"));\r\n            this.displayScale = displayScale.multiply(this.get(\"scale\"));\r\n            this.displayRotation = displayRotation + this.get(\"rotation\");\r\n            graphics.save();\r\n            graphics.translate(this.displayPosition.x, this.displayPosition.y);\r\n            graphics.rotate(this.displayRotation * Math.PI / 180);\r\n            graphics.scale(this.displayScale.x, this.displayScale.y);\r\n            graphics.translate(-this.displayPosition.x, -this.displayPosition.y);\r\n            graphics.globalAlpha = (this.parent instanceof __1.Game ? this.get(\"opacity\") : this.parent.get(\"opacity\") * this.get(\"opacity\"));\r\n            graphics.shadowBlur = this.get(\"shadow blur\");\r\n            graphics.shadowColor = this.get(\"color\").toString();\r\n            graphics.shadowOffsetX = this.get(\"shadow offset\").x;\r\n            graphics.shadowOffsetY = this.get(\"shadow offset\").y;\r\n            graphics.font = this.get(\"font style\") + \" \" + this.get(\"font variant\") + \" \" + this.get(\"font weight\") + \" \" + this.get(\"font size\") + \"px \" + this.get(\"font family\");\r\n            graphics.textAlign = this.get(\"text align\");\r\n            graphics.textBaseline = this.get(\"text baseline\");\r\n            if (this.get(\"fill\") == true) {\r\n                graphics.fillStyle = this.get(\"color\").toString();\r\n                graphics.fillText(this.get(\"text\"), this.displayPosition.x - this.game.offset.x, this.displayPosition.y - this.game.offset.y);\r\n            }\r\n            else if (this.get(\"fill\") == false) {\r\n                graphics.lineWidth = this.get(\"line width\");\r\n                graphics.strokeStyle = this.get(\"color\").toString();\r\n                graphics.strokeText(this.get(\"text\"), this.displayPosition.x - this.game.offset.x, this.displayPosition.y - this.game.offset.y);\r\n            }\r\n            graphics.restore();\r\n            this.Render.render(graphics, this.displayPosition, this.displayScale, this.displayRotation);\r\n        }\r\n    };\r\n    return Text;\r\n}(_1.Container));\r\nexports.default = Text;\r\n","\"use strict\";\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = function (d, b) {\r\n        extendStatics = Object.setPrototypeOf ||\r\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\r\n        return extendStatics(d, b);\r\n    };\r\n    return function (d, b) {\r\n        if (typeof b !== \"function\" && b !== null)\r\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar _1 = require(\".\");\r\nvar Timer = /** @class */ (function (_super) {\r\n    __extends(Timer, _super);\r\n    /**\r\n     * a character use to create a timer\r\n     * @param propertyOption property of the timer character\r\n     */\r\n    function Timer(propertyOption) {\r\n        var _this = _super.call(this, {\r\n            name: propertyOption.name,\r\n            \"z index\": propertyOption[\"z index\"],\r\n            opacity: propertyOption.opacity,\r\n            visible: propertyOption.visible\r\n        }) || this;\r\n        _this.currentTime = 0;\r\n        _this._type = \"Timer\";\r\n        _this.propertyManager.scheme({\r\n            \"wait time\": propertyOption[\"wait time\"] != undefined ? propertyOption[\"wait time\"] : 1,\r\n            play: propertyOption.play != undefined ? propertyOption.play : false,\r\n            repeat: propertyOption.repeat != undefined ? propertyOption.repeat : false\r\n        });\r\n        _this.propertyManager.delete(\"position\");\r\n        _this.propertyManager.delete(\"rotation\");\r\n        _this.propertyManager.delete(\"scale\");\r\n        return _this;\r\n    }\r\n    /**\r\n     * public method to update the character\r\n     * @param dt time difference between the previous frame and the current time\r\n     */\r\n    Timer.prototype.update = function (dt) {\r\n        var waitTime = this.get(\"wait time\");\r\n        var repeat = this.get(\"repeat\");\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\")) {\r\n            if (this.get(\"play\") == true) {\r\n                this.currentTime += dt;\r\n                if (this.currentTime >= waitTime) {\r\n                    this.currentTime = 0;\r\n                    this.eventEmitter.emit(\"timeout\");\r\n                    if (!repeat) {\r\n                        this.set(\"play\", false);\r\n                    }\r\n                }\r\n            }\r\n            this.eventEmitter.emit(\"update\", dt);\r\n            this.Updater.update(dt);\r\n        }\r\n    };\r\n    /**\r\n     * public method to render the character\r\n     * @param graphic instance of `CanvasRenderingContext2D` use to draw the character\r\n     * @param displayPosition actual position of the character on the canvas\r\n     * @param displayScale actual scale of the character\r\n     * @param displayRotation actual rotation of the character\r\n     */\r\n    Timer.prototype.render = function (graphics, displayPosition, displayScale, displayRotation) {\r\n        if (this.get(\"is initalize\") && !this.get(\"is destroyed\") && this.get(\"visible\")) {\r\n            this.displayPosition = displayPosition;\r\n            this.displayScale = displayScale;\r\n            this.displayRotation = displayRotation;\r\n            this.Render.render(graphics, this.displayPosition, this.displayScale, this.displayRotation);\r\n        }\r\n    };\r\n    return Timer;\r\n}(_1.Container));\r\nexports.default = Timer;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Sound = exports.Image = exports.Condition = exports.Timer = exports.Loop = exports.Box = exports.Text = exports.Arc = exports.Container = void 0;\r\nvar Container_1 = __importDefault(require(\"./Container\"));\r\nexports.Container = Container_1.default;\r\nvar Arc_1 = __importDefault(require(\"./Arc\"));\r\nexports.Arc = Arc_1.default;\r\nvar Text_1 = __importDefault(require(\"./Text\"));\r\nexports.Text = Text_1.default;\r\nvar Box_1 = __importDefault(require(\"./Box\"));\r\nexports.Box = Box_1.default;\r\nvar Loop_1 = __importDefault(require(\"./Loop\"));\r\nexports.Loop = Loop_1.default;\r\nvar Condition_1 = __importDefault(require(\"./Condition\"));\r\nexports.Condition = Condition_1.default;\r\nvar Timer_1 = __importDefault(require(\"./Timer\"));\r\nexports.Timer = Timer_1.default;\r\nvar Image_1 = __importDefault(require(\"./Image\"));\r\nexports.Image = Image_1.default;\r\nvar Sound_1 = __importDefault(require(\"./Sound\"));\r\nexports.Sound = Sound_1.default;\r\n","\"use strict\";\r\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });\r\n}) : (function(o, m, k, k2) {\r\n    if (k2 === undefined) k2 = k;\r\n    o[k2] = m[k];\r\n}));\r\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\r\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\r\n}) : function(o, v) {\r\n    o[\"default\"] = v;\r\n});\r\nvar __importStar = (this && this.__importStar) || function (mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\r\n    __setModuleDefault(result, mod);\r\n    return result;\r\n};\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Math = exports.Character = exports.Game = void 0;\r\nvar Game_1 = __importDefault(require(\"./Game\"));\r\nexports.Game = Game_1.default;\r\nvar Character = __importStar(require(\"./characters\"));\r\nexports.Character = Character;\r\nvar Math = __importStar(require(\"./math\"));\r\nexports.Math = Math;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Color = /** @class */ (function () {\r\n    /**\r\n     * 🛠 utility to class to handle color related issues\r\n     * @param red the saturation of red in the color\r\n     * @param green the saturation of green in the color\r\n     * @param blue the saturation of blue in the color\r\n     * @param alpha the range of transparence of the color\r\n     */\r\n    function Color(red, green, blue, alpha) {\r\n        if (red === void 0) { red = 0; }\r\n        if (green === void 0) { green = 0; }\r\n        if (blue === void 0) { blue = 0; }\r\n        if (alpha === void 0) { alpha = 1; }\r\n        this.red = red;\r\n        this.blue = blue;\r\n        this.green = green;\r\n        this.alpha = alpha;\r\n    }\r\n    /**\r\n     * public method to convert the color to string\r\n     * @returns `string` format of rgba(r, g, b, a)\r\n     */\r\n    Color.prototype.toString = function () {\r\n        return \"rgba(\" + this.red + \", \" + this.green + \", \" + this.blue + \", \" + this.alpha + \")\";\r\n    };\r\n    /**\r\n     * public method to convert the color to a number type array\r\n     * @returns `Array` of 4 numeric values `[red, green, blue, alpha]`\r\n     */\r\n    Color.prototype.toArray = function () {\r\n        return [this.red, this.green, this.blue, this.alpha];\r\n    };\r\n    /**\r\n     * public method to generate `Color` from a number type array\r\n     * @param colorArray `Array` of 4 numeric values `[red, green, blue, alpha]`\r\n     * @returns `Color`\r\n     */\r\n    Color.prototype.fromArray = function (colorArray) {\r\n        return new Color((colorArray[0] != undefined ? colorArray[0] : 0), (colorArray[1] != undefined ? colorArray[1] : 0), (colorArray[2] != undefined ? colorArray[2] : 0), (colorArray[3] != undefined ? colorArray[3] : 1));\r\n    };\r\n    /**\r\n     * public method to convert the color to a `Object`\r\n     * @returns an `Object` of key `red`, `green`, `blue`, `alpha`\r\n     */\r\n    Color.prototype.toObject = function () {\r\n        return {\r\n            red: this.red,\r\n            green: this.green,\r\n            blue: this.blue,\r\n            alpha: this.alpha\r\n        };\r\n    };\r\n    /**\r\n     * public method to generate `Color` from an `Object` of key `red`, `green`, `blue`, `alpha`\r\n     * @param colorObject an `Object` of key `red`, `green`, `blue`, `alpha`\r\n     * @returns `Color`\r\n     */\r\n    Color.prototype.fromObject = function (colorObject) {\r\n        return new Color(colorObject.red, colorObject.green, colorObject.blue, colorObject.alpha);\r\n    };\r\n    return Color;\r\n}());\r\nexports.default = Color;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Vector2 = /** @class */ (function () {\r\n    function Vector2(x, y) {\r\n        x != undefined ? this._x = x : this._x = 0;\r\n        y != undefined ? this._y = y : this._y = 0;\r\n    }\r\n    Object.defineProperty(Vector2.prototype, \"x\", {\r\n        get: function () {\r\n            return this._x;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector2.prototype, \"y\", {\r\n        get: function () {\r\n            return this._y;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector2.prototype, \"setX\", {\r\n        set: function (x) {\r\n            this._x = x;\r\n            2;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    Object.defineProperty(Vector2.prototype, \"setY\", {\r\n        set: function (y) {\r\n            this._y = y;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * public method to add other vectors to this vector\r\n     * @returns `Vector2`\r\n     */\r\n    Vector2.prototype.add = function () {\r\n        var others = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            others[_i] = arguments[_i];\r\n        }\r\n        var returnValue = this;\r\n        if (others.length == 1) {\r\n            var other = others[0];\r\n            returnValue = new Vector2(returnValue.x + other.x, returnValue.y + other.y);\r\n        }\r\n        else if (others.length > 1) {\r\n            others.forEach(function (other) {\r\n                returnValue = returnValue.add(other);\r\n            });\r\n        }\r\n        return returnValue;\r\n    };\r\n    /**\r\n     * public method to substr other vectors to this vector\r\n     * @returns `Vector2`\r\n     */\r\n    Vector2.prototype.substr = function () {\r\n        var others = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            others[_i] = arguments[_i];\r\n        }\r\n        var returnValue = this;\r\n        if (others.length == 1) {\r\n            var other = others[0];\r\n            returnValue = new Vector2(returnValue.x - other.x, returnValue.y - other.y);\r\n        }\r\n        else if (others.length > 1) {\r\n            others.forEach(function (other) {\r\n                returnValue = returnValue.substr(other);\r\n            });\r\n        }\r\n        return returnValue;\r\n    };\r\n    /**\r\n     * public method to find the dot product between this vector and another vector\r\n     * @param other the other vector to find the dot product with\r\n     * @returns `Vector2`\r\n     */\r\n    Vector2.prototype.dot = function (other) {\r\n        return ((this._x * other.x) + (this._y * other.y));\r\n    };\r\n    /**\r\n     * public method to divide other vectors to this vector\r\n     * @returns `Vector2`\r\n     */\r\n    Vector2.prototype.divide = function () {\r\n        var others = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            others[_i] = arguments[_i];\r\n        }\r\n        var returnValue = this;\r\n        if (others.length == 1) {\r\n            var other = others[0];\r\n            returnValue = new Vector2(returnValue.x / other.x, returnValue.y / other.y);\r\n        }\r\n        else if (others.length > 1) {\r\n            others.forEach(function (other) {\r\n                returnValue = returnValue.divide(other);\r\n            });\r\n        }\r\n        return returnValue;\r\n    };\r\n    /**\r\n     * public method to multiply other vectors or number to this vector\r\n     * @returns `Vector2`\r\n     */\r\n    Vector2.prototype.multiply = function () {\r\n        var others = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            others[_i] = arguments[_i];\r\n        }\r\n        var returnValue = this;\r\n        if (others.length == 1) {\r\n            var other = others[0];\r\n            if (typeof other == \"number\") {\r\n                returnValue = new Vector2(returnValue.x * other, returnValue.y * other);\r\n            }\r\n            else {\r\n                returnValue = new Vector2(returnValue.x * other.x, returnValue.y * other.y);\r\n            }\r\n        }\r\n        else if (others.length > 1) {\r\n            others.forEach(function (other) {\r\n                returnValue = returnValue.multiply(other);\r\n            });\r\n        }\r\n        return returnValue;\r\n    };\r\n    /**\r\n     * public method to convert this vector to an number type array\r\n     * @returns `number[]`\r\n     */\r\n    Vector2.prototype.toArray = function () {\r\n        return [this._x, this._y];\r\n    };\r\n    /**\r\n     * public method to convert this vector to a string\r\n     * @returns `string`\r\n     */\r\n    Vector2.prototype.toString = function () {\r\n        return \"(\" + this._x + \", \" + this._y + \")\";\r\n    };\r\n    /**\r\n     * public method to convert this vector to an object\r\n     * @returns `object`\r\n     */\r\n    Vector2.prototype.toObject = function () {\r\n        return {\r\n            x: this._x,\r\n            y: this._y\r\n        };\r\n    };\r\n    /**\r\n     * public method to find the angle of this vector\r\n     * @returns `number`\r\n     */\r\n    Vector2.prototype.angle = function () {\r\n        ;\r\n        return Math.tan((this._y / this._x));\r\n    };\r\n    /**\r\n     * public method to find the magnitude of this vector\r\n     * @returns `number`\r\n     */\r\n    Vector2.prototype.magnitude = function () {\r\n        return Math.sqrt(Math.pow(Math.abs(this._x), 2) + Math.pow(Math.abs(this._y), 2));\r\n    };\r\n    /**\r\n     * public method to normalize this vector\r\n     * @returns\r\n     */\r\n    Vector2.prototype.normalize = function () {\r\n        var length = this.magnitude();\r\n        var returnVector2 = new Vector2(0, 0);\r\n        if (length > 0.00001) {\r\n            returnVector2.setX = this.x / length;\r\n            returnVector2.setY = this.y / length;\r\n        }\r\n        return returnVector2;\r\n    };\r\n    return Vector2;\r\n}());\r\nexports.default = Vector2;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.LOG10E = exports.LN2 = exports.LN10 = exports.LOG2E = exports.SQRT2 = exports.SQRT1_2 = exports.E = exports.PI = void 0;\r\nvar PI = Math.PI, E = Math.E, SQRT1_2 = Math.SQRT1_2, SQRT2 = Math.SQRT2, LN10 = Math.LN10, LN2 = Math.LN2, LOG10E = Math.LOG10E, LOG2E = Math.LOG2E;\r\nexports.PI = PI;\r\nexports.E = E;\r\nexports.SQRT1_2 = SQRT1_2;\r\nexports.SQRT2 = SQRT2;\r\nexports.LN10 = LN10;\r\nexports.LN2 = LN2;\r\nexports.LOG10E = LOG10E;\r\nexports.LOG2E = LOG2E;\r\nMath.floor;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.random = exports.ceil = exports.expm1 = exports.exp = exports.abs = void 0;\r\nvar _1 = require(\".\");\r\n/**\r\n * Returns the absolute value of a number (the value without regard to whether it is positive or negative)\r\n * @param x A number or `Vector2` expression for which the absolute value is needed\r\n */\r\nvar abs = function (x) {\r\n    var value = typeof x == \"number\" ?\r\n        Math.abs(x) :\r\n        new _1.Vector2(Math.abs(x.x), Math.abs(x.y));\r\n    return value;\r\n};\r\nexports.abs = abs;\r\n/**\r\n * Returns e (the base of natural logarithms) raised to a power\r\n * @param x A number or `Vector2` expression representing the power of e\r\n */\r\nvar exp = function (x) {\r\n    var value = typeof x == \"number\" ?\r\n        Math.exp(x) :\r\n        new _1.Vector2(Math.exp(x.x), Math.exp(x.y));\r\n    return value;\r\n};\r\nexports.exp = exp;\r\n/**\r\n * Returns the result of (e^x - 1), which is an implementation-dependent approximation to subtracting 1 from the exponential function of x (e raised to the power of x, where e is the base of the natural logarithms)\r\n * @param x A number or `Vector2` expression\r\n */\r\nvar expm1 = function (x) {\r\n    var value = typeof x == \"number\" ?\r\n        Math.expm1(x) :\r\n        new _1.Vector2(Math.expm1(x.x), Math.expm1(x.y));\r\n    return value;\r\n};\r\nexports.expm1 = expm1;\r\n/**\r\n * Returns the smallest integer greater than or equal to its numeric argument\r\n * @param x A number or `Vector2` expression\r\n */\r\nvar ceil = function (x) {\r\n    var value = typeof x == \"number\" ?\r\n        Math.ceil(x) :\r\n        new _1.Vector2(Math.ceil(x.x), Math.ceil(x.y));\r\n    return value;\r\n};\r\nexports.ceil = ceil;\r\n/**\r\n * Returns a pseudorandom number between x and y\r\n * @param x A number expression\r\n * @param y A number expression\r\n */\r\nvar random = function (x, y) {\r\n    return x + Math.random() * (y - x);\r\n};\r\nexports.random = random;\r\n///stopped at R\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.ceil = exports.abs = exports.random = exports.expm1 = exports.exp = exports.LOG10E = exports.LN2 = exports.LN10 = exports.LOG2E = exports.SQRT2 = exports.SQRT1_2 = exports.E = exports.PI = exports.Color = exports.Vector2 = void 0;\r\nvar Color_1 = __importDefault(require(\"./Color\"));\r\nexports.Color = Color_1.default;\r\nvar constants_1 = require(\"./constants\");\r\nObject.defineProperty(exports, \"PI\", { enumerable: true, get: function () { return constants_1.PI; } });\r\nObject.defineProperty(exports, \"E\", { enumerable: true, get: function () { return constants_1.E; } });\r\nObject.defineProperty(exports, \"SQRT1_2\", { enumerable: true, get: function () { return constants_1.SQRT1_2; } });\r\nObject.defineProperty(exports, \"SQRT2\", { enumerable: true, get: function () { return constants_1.SQRT2; } });\r\nObject.defineProperty(exports, \"LOG2E\", { enumerable: true, get: function () { return constants_1.LOG2E; } });\r\nObject.defineProperty(exports, \"LN10\", { enumerable: true, get: function () { return constants_1.LN10; } });\r\nObject.defineProperty(exports, \"LN2\", { enumerable: true, get: function () { return constants_1.LN2; } });\r\nObject.defineProperty(exports, \"LOG10E\", { enumerable: true, get: function () { return constants_1.LOG10E; } });\r\nvar functions_1 = require(\"./functions\");\r\nObject.defineProperty(exports, \"exp\", { enumerable: true, get: function () { return functions_1.exp; } });\r\nObject.defineProperty(exports, \"expm1\", { enumerable: true, get: function () { return functions_1.expm1; } });\r\nObject.defineProperty(exports, \"random\", { enumerable: true, get: function () { return functions_1.random; } });\r\nObject.defineProperty(exports, \"abs\", { enumerable: true, get: function () { return functions_1.abs; } });\r\nObject.defineProperty(exports, \"ceil\", { enumerable: true, get: function () { return functions_1.ceil; } });\r\nvar Vector2_1 = __importDefault(require(\"./Vector2\"));\r\nexports.Vector2 = Vector2_1.default;\r\n","\"use strict\";\r\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n};\r\nvar __generator = (this && this.__generator) || function (thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * 🛠 utility class to handle the loading of assets for the game\r\n */\r\nvar AssetsLoader = /** @class */ (function () {\r\n    function AssetsLoader() {\r\n        this.assetsToLoad = Array();\r\n        this.assetsLoaded = new Map();\r\n        this.supportedImageFormat = new Set([\r\n            \"apng\",\r\n            \"avif\",\r\n            \"gif\",\r\n            \"jpg\",\r\n            \"jpeg\",\r\n            \"jfif\",\r\n            \"pjpeg\",\r\n            \"pjp\",\r\n            \"png\",\r\n            \"svg\",\r\n            \"webp\"\r\n        ]);\r\n        this.supportedAudioFormat = new Set([\r\n            \"wav\",\r\n            \"mp3\",\r\n            \"mp4a\",\r\n            \"mpga\",\r\n            \"mp2\",\r\n            \"mp2a\",\r\n            \"m2a\",\r\n            \"m3a\",\r\n            \"oga\",\r\n            \"ogg\",\r\n            \"spx\",\r\n            \"opus\",\r\n            \"aac\",\r\n            \"weba\",\r\n            \"caf\",\r\n            \"flac\"\r\n        ]);\r\n        this.supportedFontFormat = new Set([\r\n            \"ttf\",\r\n            \"woff\",\r\n            \"otf\",\r\n            \"woff2\"\r\n        ]);\r\n    }\r\n    /**\r\n     * public method to load a list of assets\r\n     * @param assets list of assets to load\r\n     */\r\n    AssetsLoader.prototype.load = function () {\r\n        var _this = this;\r\n        var assets = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            assets[_i] = arguments[_i];\r\n        }\r\n        assets.forEach(function (path) {\r\n            var extension = path.split(\".\").pop();\r\n            if (extension != undefined) {\r\n                extension = extension.toLowerCase();\r\n                if (_this.supportedImageFormat.has(extension))\r\n                    _this.assetsToLoad.push({\r\n                        type: \"image\",\r\n                        path: path\r\n                    });\r\n                else if (_this.supportedAudioFormat.has(extension))\r\n                    _this.assetsToLoad.push({\r\n                        type: \"audio\",\r\n                        path: path\r\n                    });\r\n                else if (_this.supportedFontFormat.has(extension))\r\n                    _this.assetsToLoad.push({\r\n                        type: \"font\",\r\n                        path: path\r\n                    });\r\n                else\r\n                    console.error(\"Asset format is not supported\");\r\n            }\r\n            else {\r\n                console.error(\"Asset need to have an extension name\");\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * public method to load an audio asset\r\n     * @param audioAssetData Javascript object containing the audio asset data to load\r\n     */\r\n    AssetsLoader.prototype.loadAudio = function (audioAssetData) {\r\n        var _this = this;\r\n        if (audioAssetData.type == \"audio\") {\r\n            var audio_1 = new Audio(audioAssetData.path);\r\n            audio_1.onloadeddata = function () {\r\n                _this.assetsLoaded.set(audio_1.src.replace(audio_1.baseURI, \"\"), {\r\n                    type: \"audio\",\r\n                    data: audio_1\r\n                });\r\n            };\r\n            audio_1.onerror = function () {\r\n                console.error(\"Failed to load audio asset from '\" + audioAssetData.path + \"'\");\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * public method to load an image asset\r\n     * @param imageAssetData Javascript object containing the image asset data to load\r\n     */\r\n    AssetsLoader.prototype.loadImage = function (imageAssetData) {\r\n        var _this = this;\r\n        if (imageAssetData.type == \"image\") {\r\n            var image_1 = new Image();\r\n            image_1.src = imageAssetData.path;\r\n            image_1.onload = function () {\r\n                _this.assetsLoaded.set(image_1.src.replace(image_1.baseURI, \"\"), {\r\n                    type: \"image\",\r\n                    data: image_1\r\n                });\r\n            };\r\n            image_1.onerror = function () {\r\n                console.error(\"Failed to load image asset from '\" + imageAssetData.path + \"'\");\r\n            };\r\n        }\r\n    };\r\n    /**\r\n     * public method to load a font asset\r\n     * @param fontAssetData Javascript object containing the font asset data to load\r\n     */\r\n    AssetsLoader.prototype.loadFont = function (fontAssetData) {\r\n        var _this = this;\r\n        var fontFace = Object(window)[\"FontFace\"];\r\n        var name = fontAssetData.path.split(\"/\").pop().replace(/\\..+/, \"\");\r\n        var font = new fontFace(name, \"url(\" + fontAssetData.path + \")\");\r\n        font.load().then(function (loaded_face) {\r\n            Object(document)[\"fonts\"].add(loaded_face);\r\n            _this.assetsLoaded.set(name, {\r\n                type: \"font\",\r\n                data: fontAssetData.path\r\n            });\r\n        }).catch(function () {\r\n            console.error(\"Failed to load font asset from '\" + fontAssetData.path + \"'\");\r\n        });\r\n    };\r\n    /**\r\n     * public method to delete a list of assets\r\n     * @param assets list of assets to delete\r\n     */\r\n    AssetsLoader.prototype.delete = function () {\r\n        var _this = this;\r\n        var assets = [];\r\n        for (var _i = 0; _i < arguments.length; _i++) {\r\n            assets[_i] = arguments[_i];\r\n        }\r\n        assets.forEach(function (path) {\r\n            _this.assetsLoaded.delete(path);\r\n        });\r\n    };\r\n    /**\r\n     * public method to check if an asset exist\r\n     * @param asset name of asset to check if exist\r\n     * @returns if asset exist return `true` else return `false`\r\n     */\r\n    AssetsLoader.prototype.check = function (asset) {\r\n        return this.assetsLoaded.has(asset);\r\n    };\r\n    /**\r\n     * public method to get an assets\r\n     * @param asset name of asset to get\r\n     * @returns if asset exist return a Javascript object containing the asset data else return `null`\r\n     */\r\n    AssetsLoader.prototype.asset = function (asset) {\r\n        if (this.assetsLoaded.has(asset))\r\n            return this.assetsLoaded.get(asset);\r\n        else\r\n            return null;\r\n    };\r\n    /**\r\n     * public method to check if all the asset is looaded\r\n     */\r\n    AssetsLoader.prototype.isAssetsLoaded = function () {\r\n        return __awaiter(this, void 0, void 0, function () {\r\n            var _this = this;\r\n            return __generator(this, function (_a) {\r\n                this.assetsToLoad.forEach(function (assetData) {\r\n                    if (assetData.type == \"image\")\r\n                        _this.loadImage(assetData);\r\n                    else if (assetData.type == \"audio\")\r\n                        _this.loadAudio(assetData);\r\n                    else if (assetData.type == \"font\")\r\n                        _this.loadFont(assetData);\r\n                });\r\n                this.assetsToLoad.length = 0;\r\n                return [2 /*return*/];\r\n            });\r\n        });\r\n    };\r\n    return AssetsLoader;\r\n}());\r\nexports.default = AssetsLoader;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar math_1 = require(\"../libs/math\");\r\nvar Camera = /** @class */ (function () {\r\n    /**\r\n     * 🛠 utility class to act as a 2D camera\r\n     * @param game insatance of the `Game`\r\n    */\r\n    function Camera(game) {\r\n        this._offset = new math_1.Vector2(0, 0);\r\n        this.game = game;\r\n    }\r\n    Object.defineProperty(Camera.prototype, \"offset\", {\r\n        /**\r\n         * public getter to get the camera offset\r\n         */\r\n        get: function () {\r\n            return this._offset;\r\n        },\r\n        /**\r\n         * public setter to set the camera offset\r\n         */\r\n        set: function (value) {\r\n            this._offset = value;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    return Camera;\r\n}());\r\nexports.default = Camera;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar DataManager = /** @class */ (function () {\r\n    /**\r\n     * 🛠 utility class to handle the storage of data for all the 🎭 characters\r\n     * @param character instance of the character the data storage belong to\r\n     */\r\n    function DataManager(character) {\r\n        this.dataMap = new Map();\r\n        this.keyMap = new Map();\r\n        this.character = character;\r\n    }\r\n    /**\r\n     * public method to rename the key of a data stored\r\n     * @param key key used to store the data\r\n     * @param name name to change the key to\r\n     */\r\n    DataManager.prototype.rename = function (key, name) {\r\n        var id = this.keyMap.get(key);\r\n        if (id != undefined) {\r\n            var dataInput = this.dataMap.get(id);\r\n            if (!this.keyMap.has(name)) {\r\n                this.keyMap.delete(key);\r\n                this.keyMap.set(name, id);\r\n                this.dataMap.set(id, {\r\n                    type: dataInput.type,\r\n                    key: name,\r\n                    value: dataInput.value\r\n                });\r\n            }\r\n            else {\r\n                // Error\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * public method to add or edit a data stored\r\n     * @param key key used to store the data\r\n     * @param value value of the data to store\r\n     */\r\n    DataManager.prototype.set = function (key, value) {\r\n        if (typeof value == \"boolean\" || typeof value == \"number\" || typeof value == \"string\") {\r\n            var id = this.keyMap.get(key);\r\n            var type = typeof value;\r\n            if (id != undefined) {\r\n                var dataInput = this.dataMap.get(id);\r\n                this.dataMap.set(id, {\r\n                    type: type,\r\n                    key: dataInput.key,\r\n                    value: value\r\n                });\r\n            }\r\n            else {\r\n                var id_1 = this.dataMap.size + 1;\r\n                this.dataMap.set(id_1, { key: key, value: value, type: type });\r\n                this.keyMap.set(key, id_1);\r\n            }\r\n        }\r\n        else {\r\n            // Error\r\n        }\r\n    };\r\n    /**\r\n     * public method to check if a data stored exist\r\n     * @param key key used to store the data\r\n     * @returns if the data exist return `true` else return `false`\r\n     */\r\n    DataManager.prototype.has = function (key) {\r\n        return this.keyMap.has(key);\r\n    };\r\n    /**\r\n     * public method to remove a data stored\r\n     * @param key key used to store the data\r\n     * @returns if return is deleted return `true` else return `false`\r\n     */\r\n    DataManager.prototype.delete = function (key) {\r\n        var id = this.keyMap.get(key);\r\n        if (id != undefined) {\r\n            this.keyMap.delete(key);\r\n            this.dataMap.delete(id);\r\n            return true;\r\n        }\r\n        return false;\r\n    };\r\n    /**\r\n     * public method to get a data stored\r\n     * @param key key used to store the data\r\n     * @returns if the data exist return the data else retun `null`\r\n     */\r\n    DataManager.prototype.get = function (key) {\r\n        var id = this.keyMap.get(key);\r\n        if (id != undefined) {\r\n            return this.dataMap.get(id);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n    };\r\n    Object.defineProperty(DataManager.prototype, \"size\", {\r\n        /**\r\n         * public getter to get the number of data stored\r\n         */\r\n        get: function () {\r\n            return this.dataMap.size;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * public method to loop through all the data stored\r\n     * @param callback  callback function one time for each data stored\r\n     */\r\n    DataManager.prototype.forEach = function (callback) {\r\n        var _this = this;\r\n        this.dataMap.forEach(function (value) { return callback(value, value.key, _this); });\r\n    };\r\n    /**\r\n     * public method to list all the data stored\r\n     * @returns Array of all the data stored\r\n     */\r\n    DataManager.prototype.list = function () {\r\n        var dataList = Array.from(this.dataMap.values());\r\n        return dataList;\r\n    };\r\n    return DataManager;\r\n}());\r\nexports.default = DataManager;\r\n","\"use strict\";\r\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar EventEmitter = /** @class */ (function () {\r\n    /**\r\n     * 🛠 utility class to handle calling and setting of different event of a character\r\n     * @param character instance of the character\r\n     */\r\n    function EventEmitter(character) {\r\n        this.eventMap = new Map();\r\n        this.character = character;\r\n    }\r\n    /**\r\n     * public method to set an event\r\n     * @param event name of event to add\r\n     * @param callback callback function to call when the event is emiited\r\n     */\r\n    EventEmitter.prototype.on = function (event, callback) {\r\n        this.eventMap.set(event, callback);\r\n    };\r\n    /**\r\n     * public method to call an event\r\n     * @param event name of event to emit\r\n     * @param args function arguments of the event\r\n     * @returns return `true` if the event is emitted else return `false`\r\n     */\r\n    EventEmitter.prototype.emit = function (event) {\r\n        var args = [];\r\n        for (var _i = 1; _i < arguments.length; _i++) {\r\n            args[_i - 1] = arguments[_i];\r\n        }\r\n        if (this.eventMap.has(event)) {\r\n            var callback = this.eventMap.get(event);\r\n            callback.apply(null, __spreadArray([this.character], args, true));\r\n            return true;\r\n        }\r\n        else {\r\n            return false;\r\n        }\r\n    };\r\n    return EventEmitter;\r\n}());\r\nexports.default = EventEmitter;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar KeyboardEventManager = /** @class */ (function () {\r\n    /**\r\n     * 🛠 utility class to handle the keyboard input from the user\r\n     * @param game insatance of the `Game`\r\n    */\r\n    function KeyboardEventManager(game) {\r\n        this.keyMap = new Map();\r\n        this.game = game;\r\n    }\r\n    /**\r\n     * public method to register a key combination from the keyboard\r\n     * @param keyCombination the key combination to register\r\n     */\r\n    KeyboardEventManager.prototype.register = function (keyCombination) {\r\n        this.keyMap.set(keyCombination, String());\r\n    };\r\n    /**\r\n     * public method to remove a registered key combination\r\n     * @param keyCombination the key combination to remove\r\n     */\r\n    KeyboardEventManager.prototype.unregister = function (keyCombination) {\r\n        this.keyMap.delete(keyCombination);\r\n    };\r\n    /**\r\n     * public method to called when the user interaction with the keyboard\r\n     * @param ev Javascript object that describe the user interaction with the keyboard\r\n     */\r\n    KeyboardEventManager.prototype.onKeyPress = function (ev) {\r\n        var notAceptedkey = new Set([\r\n            \"Shift\",\r\n            \"Control\",\r\n            \"Alt\"\r\n        ]);\r\n        var keyCombination = String();\r\n        if (ev.ctrlKey)\r\n            keyCombination = keyCombination.concat(\"CTRL+\".toUpperCase());\r\n        if (ev.shiftKey)\r\n            keyCombination = keyCombination.concat(\"SHIFT+\".toUpperCase());\r\n        if (ev.altKey)\r\n            keyCombination = keyCombination.concat(\"ALT+\".toUpperCase());\r\n        if (!notAceptedkey.has(ev.key))\r\n            keyCombination = keyCombination.concat(ev.key.toUpperCase());\r\n        if (this.keyMap.has(keyCombination))\r\n            console.log(keyCombination);\r\n    };\r\n    return KeyboardEventManager;\r\n}());\r\nexports.default = KeyboardEventManager;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.KeyboardEventManager = void 0;\r\nvar KeyboardEventManager_1 = __importDefault(require(\"./KeyboardEventManager\"));\r\nexports.KeyboardEventManager = KeyboardEventManager_1.default;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar math_1 = require(\"../libs/math\");\r\n/**\r\n * 🛠 utility class to handle the character property\r\n */\r\nvar PropertyManager = /** @class */ (function () {\r\n    function PropertyManager() {\r\n        this.propertyMap = new Map();\r\n        this.readonlyPropertySet = new Set();\r\n    }\r\n    /**\r\n     * set the property scheme\r\n     * @param propScheme\r\n     */\r\n    PropertyManager.prototype.scheme = function (propScheme) {\r\n        for (var name_1 in propScheme) {\r\n            var propertyValue = propScheme[name_1];\r\n            if (typeof propertyValue == \"object\" && !(propertyValue instanceof math_1.Vector2) && !(propertyValue instanceof math_1.Color)) {\r\n                this.propertyMap.set(name_1, {\r\n                    value: propertyValue.value,\r\n                    type: propertyValue.type,\r\n                    readonly: propertyValue.readonly\r\n                });\r\n                if (propertyValue.readonly == true)\r\n                    this.readonlyPropertySet.add(name_1);\r\n            }\r\n            else {\r\n                var propertyType = typeof propertyValue == \"number\" ? \"number\"\r\n                    : typeof propertyValue == \"string\" ? \"string\"\r\n                        : typeof propertyValue == \"boolean\" ? \"boolean\"\r\n                            : Array.isArray(propertyValue) ? \"Array<string>\"\r\n                                : propertyValue instanceof math_1.Vector2 ? \"Vector2\" : \"Color\";\r\n                this.propertyMap.set(name_1, {\r\n                    value: propertyValue,\r\n                    readonly: false,\r\n                    type: propertyType\r\n                });\r\n            }\r\n        }\r\n    };\r\n    /**\r\n     * public method to get a property\r\n     * @param name name name of the property to get\r\n     * @returns if property exist return it value else return `null`\r\n     */\r\n    PropertyManager.prototype.get = function (name) {\r\n        if (this.propertyMap.has(name))\r\n            return this.propertyMap.get(name).value;\r\n        else\r\n            return null;\r\n    };\r\n    /**\r\n     * public method to set a property\r\n     * @param name name name of the property to set\r\n     * @param value value to set the property with\r\n     */\r\n    PropertyManager.prototype.set = function (name, value) {\r\n        if (this.propertyMap.has(name) && !this.readonlyPropertySet.has(name)) {\r\n            this.propertyMap.set(name, {\r\n                value: value,\r\n                readonly: this.propertyMap.get(name).readonly,\r\n                type: this.propertyMap.get(name).type\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * public method to override the value of a readonly property\r\n     * @param name name name of the property to override\r\n     * @param value value to override the property with\r\n     */\r\n    PropertyManager.prototype.override = function (name, value) {\r\n        if (this.readonlyPropertySet.has(name))\r\n            this.propertyMap.set(name, {\r\n                value: value,\r\n                readonly: this.propertyMap.get(name).readonly,\r\n                type: this.propertyMap.get(name).type\r\n            });\r\n    };\r\n    /**\r\n     * public method to check if a property exist\r\n     * @param name name of the property to check if it exist\r\n     * @returns return `true` if the property exist else return `false`\r\n     */\r\n    PropertyManager.prototype.has = function (name) {\r\n        return this.propertyMap.has(name);\r\n    };\r\n    /**\r\n     * public method to delete a property\r\n     * @param name name of the property to delete\r\n     */\r\n    PropertyManager.prototype.delete = function (name) {\r\n        this.propertyMap.delete(name);\r\n    };\r\n    /**\r\n     * public method to get all the character propertries\r\n     * @returns return an `Array` of type object\r\n     */\r\n    PropertyManager.prototype.entry = function () {\r\n        return Array\r\n            .from(this.propertyMap)\r\n            .filter(function (property) { return !property[1].readonly; })\r\n            .map(function (property) {\r\n            return {\r\n                name: property[0],\r\n                value: property[1].value,\r\n                type: property[1].type\r\n            };\r\n        });\r\n    };\r\n    return PropertyManager;\r\n}());\r\nexports.default = PropertyManager;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\n/**\r\n * 🛠 utility class to handle the rendering of a character and its children\r\n */\r\nvar Render = /** @class */ (function () {\r\n    function Render() {\r\n        this.renderMap = new Map();\r\n        this.renderIndexArray = Array();\r\n    }\r\n    /**\r\n     * public method to add a character to the `Render` instance\r\n     * @param zIndex the character stack level number\r\n     * @param character character instance to add\r\n     */\r\n    Render.prototype.add = function (zIndex, character) {\r\n        if (this.renderMap.has(zIndex)) {\r\n            var renderCharacterList = this.renderMap.get(zIndex);\r\n            renderCharacterList.push(character);\r\n            if (!this.renderIndexArray.includes(zIndex)) {\r\n                this.renderIndexArray.push(zIndex);\r\n            }\r\n        }\r\n        else {\r\n            this.renderIndexArray.push(zIndex);\r\n            this.renderMap.set(zIndex, [character]);\r\n        }\r\n    };\r\n    /**\r\n    * public method to render character\r\n    * @param graphic instance of `CanvasRenderingContext2D` class use to draw\r\n    * @param displayPosition actual position of the character on the canvas\r\n    * @param displayScale actual scale of the character\r\n    * @param displayRotation actual rotation of the character\r\n    */\r\n    Render.prototype.render = function (graphic, displayPosition, displayScale, displayRotation) {\r\n        var _this = this;\r\n        this.renderIndexArray.sort();\r\n        this.renderIndexArray.forEach(function (zIndex) {\r\n            if (_this.renderMap.has(zIndex)) {\r\n                var renderCharacterList = _this.renderMap.get(zIndex);\r\n                renderCharacterList.forEach(function (character) {\r\n                    if (!character.get(\"is destroyed\"))\r\n                        character.render(graphic, displayPosition, displayScale, displayRotation);\r\n                });\r\n            }\r\n        });\r\n        this.renderIndexArray.length = 0;\r\n        this.renderMap.clear();\r\n    };\r\n    return Render;\r\n}());\r\nexports.default = Render;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar Storage = /** @class */ (function () {\r\n    /**\r\n     * 🛠 utility class to handle the storage of a character children\r\n     * @param character instance of the character\r\n     */\r\n    function Storage(character) {\r\n        this.storageMap = new Map();\r\n        this.predefineCharacterList = Array();\r\n        this.character = character;\r\n    }\r\n    Object.defineProperty(Storage.prototype, \"characterTree\", {\r\n        get: function () {\r\n            return this._characterTree;\r\n        },\r\n        set: function (tree) {\r\n            this._characterTree = tree;\r\n        },\r\n        enumerable: false,\r\n        configurable: true\r\n    });\r\n    /**\r\n     * public method to list all the charcter children\r\n     * @returns `Array` containing all the instance of the character children\r\n     */\r\n    Storage.prototype.list = function () {\r\n        return Array.from(this.storageMap.values());\r\n    };\r\n    /**\r\n     * public method to list all the charcter children which have not been initalize\r\n     * @returns `Array` containing all the instance of the character children which have not been initalize\r\n     */\r\n    Storage.prototype.listPredefineCharacter = function () {\r\n        return this.predefineCharacterList;\r\n    };\r\n    /**\r\n     * public method to add th character children directly to the storage `Map` object\r\n     * @param character character children to add\r\n     */\r\n    Storage.prototype.nativeAdd = function (character) {\r\n        this.storageMap.set(character.get(\"name\"), character);\r\n    };\r\n    /**\r\n     * public method add the character children to the `Storage` instance\r\n     * @param character character children to add\r\n     */\r\n    Storage.prototype.add = function (character) {\r\n        this.predefineCharacterList.push(character);\r\n    };\r\n    /**\r\n     * public method to check if a character exist\r\n     * @param path character path (e.g `character/character_child`)\r\n     * @returns return `true` if character exist else return `false`\r\n     */\r\n    Storage.prototype.has = function (path) {\r\n        var has = false;\r\n        var pathFormat = path.split(\"/\");\r\n        var character = this.character;\r\n        if (pathFormat.length == 1) {\r\n            has = this.storageMap.has(pathFormat[0]);\r\n        }\r\n        else if (pathFormat.length > 1) {\r\n            pathFormat.forEach(function (sigularPath) {\r\n                if (character != null) {\r\n                    if (character.has(sigularPath)) {\r\n                        character = character.child(sigularPath);\r\n                        has = true;\r\n                    }\r\n                    else {\r\n                        has = false;\r\n                    }\r\n                }\r\n                else {\r\n                    has = false;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            has = false;\r\n        }\r\n        return has;\r\n    };\r\n    /**\r\n     * public method to clear the character storage\r\n     */\r\n    Storage.prototype.clear = function () {\r\n        this.storageMap.clear();\r\n        this.predefineCharacterList.length = 0;\r\n    };\r\n    /**\r\n     * public method to get a character\r\n     * @param path character path (e.g `character/character_child`)\r\n     * @returns return the character instance if the character exist else return `null`\r\n     */\r\n    Storage.prototype.child = function (path) {\r\n        var _this = this;\r\n        var child = null;\r\n        var pathFormat = path.split(\"/\");\r\n        if (pathFormat.length == 1) {\r\n            if (this.storageMap.has(pathFormat[0])) {\r\n                child = this.storageMap.get(pathFormat[0]);\r\n            }\r\n            else {\r\n                child = null;\r\n            }\r\n        }\r\n        else if (pathFormat.length > 1) {\r\n            pathFormat.forEach(function (singularPath) {\r\n                if (singularPath != String()) {\r\n                    if (child == null) {\r\n                        if (_this.storageMap.has(singularPath)) {\r\n                            child = _this.storageMap.get(singularPath);\r\n                        }\r\n                        else {\r\n                            child = null;\r\n                        }\r\n                    }\r\n                    else {\r\n                        if (child.has(singularPath)) {\r\n                            child = child.child(singularPath);\r\n                        }\r\n                        else {\r\n                            child = null;\r\n                        }\r\n                    }\r\n                }\r\n                else {\r\n                    child = null;\r\n                }\r\n            });\r\n        }\r\n        else {\r\n            child = null;\r\n        }\r\n        return child;\r\n    };\r\n    return Storage;\r\n}());\r\nexports.default = Storage;\r\n","\"use strict\";\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nvar __1 = require(\"../..\");\r\nvar Updater = /** @class */ (function () {\r\n    /**\r\n     * 🛠 utility class to handle the updating of a character and its children\r\n     * @param canvas instance of the `HTMLCanvasElement`\r\n     * @param game instance of the `Game`\r\n     * @param character the instance of the character\r\n     * @param storage instance of the `Slim.Storage` object\r\n     * @param render instance of the `Slim.Render` object\r\n     */\r\n    function Updater(canvas, game, character, storage, render) {\r\n        this.canvas = canvas;\r\n        this.game = game;\r\n        this.character = character;\r\n        this.render = render;\r\n        this.storage = storage;\r\n    }\r\n    /**\r\n     * public method to update the character\r\n     * @param dt time difference between the previous frame and the current time\r\n     */\r\n    Updater.prototype.update = function (dt) {\r\n        var _this = this;\r\n        var characterList = this.storage.list();\r\n        var predefineCharacterList = this.storage.listPredefineCharacter();\r\n        predefineCharacterList.forEach(function (character) {\r\n            if (!character.get(\"is initalize\")) {\r\n                character.initalize(_this.canvas, _this.game, _this.character);\r\n                characterList.push(character);\r\n            }\r\n        });\r\n        predefineCharacterList.length = 0;\r\n        this.storage.clear();\r\n        this.storage.characterTree = {\r\n            name: this.character.get(\"name\"),\r\n            type: this.character.type,\r\n            path: this.character.get(\"path\"),\r\n            children: new Map()\r\n        };\r\n        characterList.forEach(function (character) {\r\n            if (!character.get(\"is destroyed\")) {\r\n                var path = String();\r\n                if (!(_this.character instanceof __1.Game))\r\n                    path = path.concat(_this.character.get(\"path\")).concat(\"/\").concat(character.get(\"name\"));\r\n                else\r\n                    path = path.concat(character.get(\"name\"));\r\n                character.set(\"path\", path);\r\n                character.update(dt);\r\n                _this.storage.nativeAdd(character);\r\n                _this.render.add(character.get(\"z index\"), character);\r\n                _this.storage.characterTree.children.set(character.get(\"name\"), character.tree);\r\n            }\r\n            else {\r\n                character.emit(\"final\");\r\n            }\r\n        });\r\n    };\r\n    return Updater;\r\n}());\r\nexports.default = Updater;\r\n","\"use strict\";\r\nvar __importDefault = (this && this.__importDefault) || function (mod) {\r\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\r\n};\r\nObject.defineProperty(exports, \"__esModule\", { value: true });\r\nexports.Render = exports.Updater = exports.Storage = void 0;\r\nvar Render_1 = __importDefault(require(\"./Render\"));\r\nexports.Render = Render_1.default;\r\nvar Storage_1 = __importDefault(require(\"./Storage\"));\r\nexports.Storage = Storage_1.default;\r\nvar Updater_1 = __importDefault(require(\"./Updater\"));\r\nexports.Updater = Updater_1.default;\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(\"./src/index.ts\");\n",""],"names":[],"sourceRoot":""}